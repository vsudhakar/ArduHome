// Generated by CoffeeScript 1.4.0
(function() {
  var SerialPort, app, express, fs, interval, port, serial, toggle, turnOff, turnOn,
    _this = this;

  var l1, l2, l3, l4, l5;

  SerialPort = require('serialport').SerialPort;

  fs = require('fs');

  port = '/dev/ttyACM0';

  express = require('express');

  serial = null;

  interval = null;

  l1 = false;
  l2 = false;
  l3 = false;
  l4 = false;
  l5 = false;

  //Light 1

  turnOnl1 = function() {
    l1 = true;
    return serial.write(new Buffer([0x01]));
  };

  turnOffl1 = function() {
    l1 = false;
    return serial.write(new Buffer([0x01]));
  };

  //Light 2

  turnOnl2 = function() {
    l2 = true;
    return serial.write(new Buffer([0x02]));
  };

  turnOffl2 = function() {
    l2 = false;
    return serial.write(new Buffer([0x02]));
  };

  //Light 3

  turnOnl3 = function() {
    l3 = true;
    return serial.write(new Buffer([0x03]));
  };

  turnOffl3 = function() {
    l3 = false;
    return serial.write(new Buffer([0x03]));
  };

  //Light 4

  turnOnl4 = function() {
    l4 = true;
    return serial.write(new Buffer([0x04]));
  };

  turnOffl4 = function() {
    l4 = false;
    return serial.write(new Buffer([0x04]));
  };

  //Light 5

  turnOnl5 = function() {
    l5 = true;
    return serial.write(new Buffer([0x05]));
  };

  turnOffl5 = function() {
    l5 = false;
    return serial.write(new Buffer([0x05]));
  };

  app = express.createServer();

  app.get('/', function(req, res) {
    return res.sendfile('index.html');
  });

  app.get('/onl1', function(req, res) {
    clearInterval(interval);
    turnOnl1();
    return res.end();
  });

  app.get('/offl1', function(req, res) {
    clearInterval(interval);
    turnOffl1();
    return res.end();
  });

  app.get('/onl2', function(req, res) {
    clearInterval(interval);
    turnOnl2();
    return res.end();
  });

  app.get('/offl2', function(req, res) {
    clearInterval(interval);
    turnOffl2();
    return res.end();
  });

  app.get('/onl3', function(req, res) {
    clearInterval(interval);
    turnOnl3();
    return res.end();
  });

  app.get('/offl3', function(req, res) {
    clearInterval(interval);
    turnOffl3();
    return res.end();
  });

  app.get('/onl4', function(req, res) {
    clearInterval(interval);
    turnOnl4();
    return res.end();
  });

  app.get('/offl4', function(req, res) {
    clearInterval(interval);
    turnOffl4();
    return res.end();
  });

  app.get('/onl5', function(req, res) {
    clearInterval(interval);
    turnOnl5();
    return res.end();
  });

  app.get('/offl5', function(req, res) {
    clearInterval(interval);
    turnOffl5();
    return res.end();
  });
  

  console.log("Starting...");

  fs.stat(port, function(err, stats) {
    if (err != null) {
      console.log("Couldn't stat " + port);
      process.exit();
    }
    console.log("Started.");
    serial = new SerialPort(port, {
      baudrate: 9600
    });
    return app.listen(8080);
  });

}).call(this);
